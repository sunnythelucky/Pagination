{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sunny/Desktop/workspace/ReactStudies/PICS/src/components/ImageCard.js\";\nimport React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSpans = async () => {\n      const height = await this.imageRef.current.clientHeight;\n      const spans = Math.ceil(height / 10);\n      this.setState({\n        spans\n      });\n    };\n\n    this.state = {\n      spans: 0\n    };\n    this.imageRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {// this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  render() {\n    const {\n      discription,\n      urls\n    } = this.props.image;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        gridRowEnd: `span ${this.state.spans}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: discription,\n        src: urls.regular\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ImageCard;","map":{"version":3,"sources":["/Users/sunny/Desktop/workspace/ReactStudies/PICS/src/components/ImageCard.js"],"names":["React","ImageCard","Component","constructor","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","componentDidMount","render","discription","urls","image","gridRowEnd","regular"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAQnBC,QARmB,GAQR,YAAY;AACtB,YAAMC,MAAM,GAAG,MAAM,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAA3C;AACA,YAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,EAAnB,CAAd;AAEA,WAAKO,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACA,KAbkB;;AAElB,SAAKI,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKH,QAAL,gBAAgBP,KAAK,CAACe,SAAN,EAAhB;AACA;;AACDC,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAODC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwB,KAAKf,KAAL,CAAWgB,KAAzC;AACA,wBACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAG,QAAO,KAAKP,KAAL,CAAWJ,KAAM;AAAvC,OAAZ;AAAA,6BACC;AAAK,QAAA,GAAG,EAAEQ,WAAV;AAAuB,QAAA,GAAG,EAAEC,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAtBsC;;AAyBxC,eAAerB,SAAf","sourcesContent":["import React from \"react\";\n\nclass ImageCard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { spans: 0 };\n\t\tthis.imageRef = React.createRef();\n\t}\n\tcomponentDidMount() {\n\t\t// this.imageRef.current.addEventListener(\"load\", this.setSpans);\n\t}\n\tsetSpans = async () => {\n\t\tconst height = await this.imageRef.current.clientHeight;\n\t\tconst spans = Math.ceil(height / 10);\n\n\t\tthis.setState({ spans });\n\t};\n\trender() {\n\t\tconst { discription, urls } = this.props.image;\n\t\treturn (\n\t\t\t<div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n\t\t\t\t<img alt={discription} src={urls.regular} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}